name: Backend CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
      
      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run linting with flake8
        working-directory: backend
        run: |
          pip install flake8
          flake8 app --count --show-source --statistics
      
      - name: Check code formatting with black
        working-directory: backend
        run: |
          pip install black
          black --check app
      
      - name: Run tests with pytest
        working-directory: backend
        env:
          DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
          SECRET_KEY: test-secret-key-for-ci
          BACKEND_CORS_ORIGINS: '["http://localhost:3000"]'
        run: |
          pytest --cov=app --cov-report=term --cov-report=xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: backend/coverage.xml
          flags: backend
          name: backend-coverage
        continue-on-error: true

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to Railway
        run: |
          echo "Deployment to Railway would happen here"
          echo "Configure RAILWAY_TOKEN secret in repository settings"
          echo "Install Railway CLI and run: railway up"
        # Uncomment when Railway token is configured:
        # env:
        #   RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        # run: |
        #   npm install -g @railway/cli
        #   railway up
